name: Java CI with Maven and jpackage for Linux

on:
  push:
   tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Purpose of the build'
        required: true
        default: 'Test'
        type: choice
        options:
        - Test
        - Release

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Install jpackage dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y fakeroot rpm

    - name: Build with Maven and create runtime image with jlink
      run: mvn -B clean install javafx:jlink --file pom.xml

    - name: Extract project version from pom.xml
      run: echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Run jpackage for .deb
      run: |
        jpackage --type deb \
          --app-version ${{ env.PROJECT_VERSION }} \
          --name "Hashana" \
          --vendor "Yurinero" \
          --runtime-image target/hashana-runtime \
          --module me.yurinero.hashana/me.yurinero.hashana.Hashana \
          --dest target/installer-deb \
          --icon src/main/resources/me/yurinero/hashana/hashana-icon.png \
          --linux-shortcut \
          --linux-menu-group "Utilities"

    - name: Run jpackage for .rpm
      run: |
        jpackage --type rpm \
          --app-version ${{ env.PROJECT_VERSION }} \
          --name "Hashana" \
          --vendor "Yurinero" \
          --runtime-image target/hashana-runtime \
          --module me.yurinero.hashana/me.yurinero.hashana.Hashana \
          --dest target/installer-rpm \
          --icon src/main/resources/me/yurinero/hashana/hashana-icon.png \
          --linux-shortcut \
          --linux-menu-group "Utilities"

    - name: Archive .deb package
      uses: actions/upload-artifact@v4
      with:
        name: Hashana-Linux-DEB-${{ env.PROJECT_VERSION }}
        path: target/installer-deb/*.deb
        if-no-files-found: error

    - name: Archive .rpm package
      uses: actions/upload-artifact@v4
      with:
        name: Hashana-Linux-RPM-${{ env.PROJECT_VERSION }}
        path: target/installer-rpm/*.rpm
        if-no-files-found: error
